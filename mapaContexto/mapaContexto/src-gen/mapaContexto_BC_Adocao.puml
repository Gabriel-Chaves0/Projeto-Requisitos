@startuml

skinparam componentStyle uml2

package "'Abrigo' Aggregate" <<Rectangle>> {
	class Abrigo <<(A,#fffab8) Aggregate Root>> {
		String nome_abrigo
		int capacidadeAbrigo
		IdAbrigo id_abrigo
		Endereco endereco_abrigo
		Contato contato_abrigo
		List<IdAnimal> animais_abrigados
		List<IdPessoa> funcionariosAbrigo
		boolean isMaxCapacity()
		void setNomeAbrigo(String nomeAbrigo)
		String getNomeAbrigo()
		Contato getContatoAbrigo()
		void setContatoAbrigo(Contato contatoAbrigo)
		int getCapacidadeAbrigo()
		void setCapacidadeAbrigo(int capacidadeAbrigo)
		List<Pessoa> getFuncionariosAbrigo()
		List<Animal> getAnimaisAbrigo()
	}
	class IdAbrigo <<(V,DarkSeaGreen) Value Object>> {
		int id_abrigo
		int getId()
	}
	class Endereco <<(V,DarkSeaGreen) Value Object>> {
		String cidade
		String rua
		String getRua()
		String getCidade()
	}
	class Contato <<(V,DarkSeaGreen) Value Object>> {
		String telefone
		String email_contato
		String getEmail()
		String getTelefone()
	}
	class GetAnimais <<(S,DarkSeaGreen) Service>> {
		List<Animal> getAnimaisAbrigo()
	}
}
package "'Animal' Aggregate" <<Rectangle>> {
	class Animal <<(A,#fffab8) Aggregate Root>> {
		String nome_animal
		String idade_animal
		String especie
		String raca
		String porte
		String sexo
		Boolean foi_adotado
		IdAnimal id_animal
		IdAbrigo id_abrigo
		IdPessoa[0..1] id_adotante
		SaudeAnimal[0..1] saude_animal
		IdAnimal getIdAnimal()
		String getNomeAnimal()
		void setNomeAnimal(String nomeAnimal)
		String getIdadeAnimal()
		String getEspecie()
		String getRaca()
		String getPorte()
		String getSexo()
		Boolean getAdotado()
		void setAdotado(Boolean adotado)
		SaudeAnimal getSaudeAnimal()
		void setSaudeAnimal(SaudeAnimal saudeAnimal)
		IdPessoa getIdAdotante()
		void setIdAdotante(IdPessoa idAdotante)
		IdAbrigo getIdAbrigo()
	}
	class IdAnimal <<(V,DarkSeaGreen) Value Object>> {
		int id_animal
		int getId()
	}
	class SaudeAnimal <<(V,DarkSeaGreen) Value Object>> {
		boolean vacina_raiva
		boolean vermifugado
		boolean castrado
		boolean isVacinaRaiva()
		void setVacinaRaiva(boolean vacinaRaiva)
		boolean isVermifugado()
		void setVermifugado(boolean vermifugado)
		boolean isCastrado()
		void setCastrado(boolean castrado)
	}
	class InfoAdotante <<(S,DarkSeaGreen) Service>> {
		IdPessoa getIdAdotante()
		void setIdAdotante(IdPessoa idAdotante)
	}
	class GetAbrigo <<(S,DarkSeaGreen) Service>> {
		IdAbrigo getIdAbrigo()
	}
}
package "'Pessoa' Aggregate" <<Rectangle>> {
	class Pessoa <<(A,#fffab8) Aggregate Root>> {
		String nome_pessoa
		String cpf
		Date data_pessoa
		IdPessoa id_pessoa
		Endereco endereco_pessoa
		Contato contato_pessoa
		List<IdAnimal> animais_adotados
		Preferencias preferencias
		Preferencias getPreferencias()
		void setPreferencias(Preferencias preferencias)
		IdPessoa getIdPessoa()
		Endereco getEnderecoPessoa()
		void setEnderecoPessoa(Endereco enderecoPessoa)
		Contato getContatoPessoa()
		void setContatoPessoa(Contato contatoPessoa)
		String getNomePessoa()
		void setNomePessoa(String nomePessoa)
		String getCpf()
		Date getDataPessoa()
	}
	class IdPessoa <<(V,DarkSeaGreen) Value Object>> {
		int id_pessoa
		int getId()
	}
	class Preferencias <<(V,DarkSeaGreen) Value Object>> {
		List<String> especies
		List<String> racas
		List<String> portes
		List<String> sexos
		List<String> getEspecies()
		void setEspecies(List<String> especies)
		List<String> getRacas()
		void setRacas(List<String> racas)
		List<String> getPortes()
		void setPortes(List<String> portes)
		List<String> getSexos()
		void setSexos(List<String> sexos)
	}
}
Pessoa --> IdPessoa : id_pessoa
Animal --> IdAnimal : id_animal
Pessoa --> Contato : contato_pessoa
Abrigo "1" o--> "*" IdAnimal : animais_abrigados
Abrigo --> Endereco : endereco_abrigo
Abrigo --> Contato : contato_abrigo
Abrigo "1" o--> "*" IdPessoa : funcionariosAbrigo
Abrigo --> IdAbrigo : id_abrigo
Animal "1" --> "0..1" SaudeAnimal : saude_animal
Pessoa "1" o--> "*" IdAnimal : animais_adotados
Animal "1" --> "0..1" IdPessoa : id_adotante
Animal --> IdAbrigo : id_abrigo
Pessoa --> Endereco : endereco_pessoa
Pessoa --> Preferencias : preferencias
legend left
  This bounded context implements the subdomain 'Adocao'.
end legend


@enduml
